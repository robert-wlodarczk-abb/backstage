# Define the API version and kind of resource
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: azure-storage-account
  title: Azure Storage Account Deployment
  description: Deploy an Azure Storage Account using Terraform
spec:
  owner: BackstageAdmins
  type: service
  parameters:
    - title: Storage Account Details
      required:
        - name
        - subscription
        - resourceGroupName
        - location
        - sku
      properties:
        name:
          title: Storage Account Name
          type: string
          description: Unique name for your Azure Storage Account
          ui:autofocus: true
        subscription:
          title: Subscription ID
          type: string
          description: ID of the Subscription
        resourceGroupName:
          title: Resource Group Name
          type: string
          description: Name of the Azure Resource Group
        location:
          title: Azure Location
          type: string
          description: Azure region to deploy the Storage Account
          enum:
            - eastus
            - westus
            - westeurope
            - southeastasia
        sku:
          title: SKU Type
          type: string
          description: SKU for the storage account (e.g., Standard_LRS, Standard_GRS)
          enum:
            - Standard_LRS
            - Standard_GRS
            - Standard_ZRS
            - Premium_LRS
  steps:
    - id: github-action
      name: Trigger GitHub Action
      action: github:actions:dispatch
      input:
        workflowId: stages.template.yaml  # Path to your GitHub Action workflow file
        repoUrl: github.com/robert-wlodarczk-abb/backstage  # Replace with your repository URL
        branchOrTagName: 'main'  # Branch containing the workflow file
        workflowInputs:
          storageAccountName: ${{ parameters.name }}
          subscription: ${{ parameters.subscription }}
          resourceGroupName: ${{ parameters.resourceGroupName }}
          location: ${{ parameters.location }}
          sku: ${{ parameters.sku }}
    - id: register
      name: Register in Backstage
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['github-action'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'
  output:
    links:
      - title: Repository
        url: ${{ steps['github-action'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
